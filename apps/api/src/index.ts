import express from "express";
import dotenv from "dotenv";
import cors from "cors";
import prisma from "./config/database";

// Load environment variables
dotenv.config();

const app = express();
const PORT = process.env.PORT || 3001;

// Middlewares
app.use(cors());
app.use(express.json());

// Routes
app.get("/", (req, res) => {
  res.json({ message: "Hello from Live Polling API!" });
});

app.get("/api/health", async (req, res) => {
  try {
    // Test database connection
    await prisma.$queryRaw`SELECT 1`;
    res.json({
      status: "OK",
      database: "Connected",
      timestamp: new Date().toISOString(),
    });
  } catch (error) {
    res.status(500).json({
      status: "ERROR",
      database: "Disconnected",
      error: error instanceof Error ? error.message : "Unknown error",
    });
  }
});

// Test database operations
app.get("/api/test-db", async (req, res) => {
  try {
    const pollCount = await prisma.pollHistory.count();
    res.json({
      message: "Database connection successful",
      pollHistoryCount: pollCount,
    });
  } catch (error) {
    res.status(500).json({
      error: "Database connection failed",
      details: error instanceof Error ? error.message : "Unknown error",
    });
  }
});

// Start server
app.listen(PORT, () => {
  console.log(`🚀 Server running on port ${PORT}`);
  console.log(`📊 Live Polling API is ready!`);
  console.log(
    `🗄️ Database: ${process.env.DATABASE_URL ? "Configured" : "Not configured"}`
  );
});

// Generated by Copilot

// Graceful shutdown
process.on("SIGINT", async () => {
  console.log("Shutting down gracefully...");
  await prisma.$disconnect();
  process.exit(0);
});

process.on("SIGTERM", async () => {
  console.log("Shutting down gracefully...");
  await prisma.$disconnect();
  process.exit(0);
});

export default app;
